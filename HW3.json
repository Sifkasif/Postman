{
	"info": {
		"_postman_id": "e9a0a78f-f711-4571-99b9-33e74b249d2f",
		"name": "3",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "1",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "login",
							"value": "str",
							"type": "text"
						},
						{
							"key": "password",
							"value": "str",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/login",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", () => {\r",
							"    pm.expect(pm.response.code).to.eql(200);\r",
							"});\r",
							"\r",
							"let req = request.data;\r",
							"let resJson = pm.response.json();\r",
							"\r",
							"let schema = {\r",
							"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
							"    \"$id\": \"http://example.com/example.json\",\r",
							"    \"type\": \"object\",\r",
							"    \"title\": \"The root schema\",\r",
							"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
							"    \"default\": {},\r",
							"    \"examples\": [\r",
							"        {\r",
							"            \"person\": {\r",
							"                \"u_age\": 13,\r",
							"                \"u_name\": [\r",
							"                    \"Sif\",\r",
							"                    3000,\r",
							"                    13\r",
							"                ],\r",
							"                \"u_salary_1_5_year\": 12000\r",
							"            },\r",
							"            \"qa_salary_after_12_months\": 8700.0,\r",
							"            \"qa_salary_after_6_months\": 6000,\r",
							"            \"start_qa_salary\": 3000\r",
							"        }\r",
							"    ],\r",
							"    \"required\": [\r",
							"        \"person\",\r",
							"        \"qa_salary_after_12_months\",\r",
							"        \"qa_salary_after_6_months\",\r",
							"        \"start_qa_salary\"\r",
							"    ],\r",
							"    \"properties\": {\r",
							"        \"person\": {\r",
							"            \"$id\": \"#/properties/person\",\r",
							"            \"type\": \"object\",\r",
							"            \"title\": \"The person schema\",\r",
							"            \"description\": \"An explanation about the purpose of this instance.\",\r",
							"            \"default\": {},\r",
							"            \"examples\": [\r",
							"                {\r",
							"                    \"u_age\": 13,\r",
							"                    \"u_name\": [\r",
							"                        \"Sif\",\r",
							"                        3000,\r",
							"                        13\r",
							"                    ],\r",
							"                    \"u_salary_1_5_year\": 12000\r",
							"                }\r",
							"            ],\r",
							"            \"required\": [\r",
							"                \"u_age\",\r",
							"                \"u_name\",\r",
							"                \"u_salary_1_5_year\"\r",
							"            ],\r",
							"            \"properties\": {\r",
							"                \"u_age\": {\r",
							"                    \"$id\": \"#/properties/person/properties/u_age\",\r",
							"                    \"type\": \"integer\",\r",
							"                    \"title\": \"The u_age schema\",\r",
							"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
							"                    \"default\": 0,\r",
							"                    \"examples\": [\r",
							"                        13\r",
							"                    ]\r",
							"                },\r",
							"                \"u_name\": {\r",
							"                    \"$id\": \"#/properties/person/properties/u_name\",\r",
							"                    \"type\": \"array\",\r",
							"                    \"title\": \"The u_name schema\",\r",
							"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
							"                    \"default\": [],\r",
							"                    \"examples\": [\r",
							"                        [\r",
							"                            \"Sif\",\r",
							"                            3000\r",
							"                        ]\r",
							"                    ],\r",
							"                    \"additionalItems\": true,\r",
							"                    \"items\": {\r",
							"                        \"$id\": \"#/properties/person/properties/u_name/items\",\r",
							"                        \"anyOf\": [\r",
							"                            {\r",
							"                                \"$id\": \"#/properties/person/properties/u_name/items/anyOf/0\",\r",
							"                                \"type\": \"string\",\r",
							"                                \"title\": \"The first anyOf schema\",\r",
							"                                \"description\": \"An explanation about the purpose of this instance.\",\r",
							"                                \"default\": \"\",\r",
							"                                \"examples\": [\r",
							"                                    \"Sif\"\r",
							"                                ]\r",
							"                            },\r",
							"                            {\r",
							"                                \"$id\": \"#/properties/person/properties/u_name/items/anyOf/1\",\r",
							"                                \"type\": \"integer\",\r",
							"                                \"title\": \"The second anyOf schema\",\r",
							"                                \"description\": \"An explanation about the purpose of this instance.\",\r",
							"                                \"default\": 0,\r",
							"                                \"examples\": [\r",
							"                                    3000,\r",
							"                                    13\r",
							"                                ]\r",
							"                            }\r",
							"                        ]\r",
							"                    }\r",
							"                },\r",
							"                \"u_salary_1_5_year\": {\r",
							"                    \"$id\": \"#/properties/person/properties/u_salary_1_5_year\",\r",
							"                    \"type\": \"integer\",\r",
							"                    \"title\": \"The u_salary_1_5_year schema\",\r",
							"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
							"                    \"default\": 0,\r",
							"                    \"examples\": [\r",
							"                        12000\r",
							"                    ]\r",
							"                }\r",
							"            },\r",
							"            \"additionalProperties\": true\r",
							"        },\r",
							"        \"qa_salary_after_12_months\": {\r",
							"            \"$id\": \"#/properties/qa_salary_after_12_months\",\r",
							"            \"type\": \"number\",\r",
							"            \"title\": \"The qa_salary_after_12_months schema\",\r",
							"            \"description\": \"An explanation about the purpose of this instance.\",\r",
							"            \"default\": 0.0,\r",
							"            \"examples\": [\r",
							"                8700.0\r",
							"            ]\r",
							"        },\r",
							"        \"qa_salary_after_6_months\": {\r",
							"            \"$id\": \"#/properties/qa_salary_after_6_months\",\r",
							"            \"type\": \"integer\",\r",
							"            \"title\": \"The qa_salary_after_6_months schema\",\r",
							"            \"description\": \"An explanation about the purpose of this instance.\",\r",
							"            \"default\": 0,\r",
							"            \"examples\": [\r",
							"                6000\r",
							"            ]\r",
							"        },\r",
							"        \"start_qa_salary\": {\r",
							"            \"$id\": \"#/properties/start_qa_salary\",\r",
							"            \"type\": \"integer\",\r",
							"            \"title\": \"The start_qa_salary schema\",\r",
							"            \"description\": \"An explanation about the purpose of this instance.\",\r",
							"            \"default\": 0,\r",
							"            \"examples\": [\r",
							"                3000\r",
							"            ]\r",
							"        }\r",
							"    },\r",
							"    \"additionalProperties\": true\r",
							"}\r",
							"\r",
							"    let r =  tv4.validateMultiple(resJson, schema);\r",
							"    console.log(r);\r",
							"\r",
							"    pm.test('Schema is valid', () => {\r",
							"        pm.expect(tv4.validate(resJson, schema)).to.be.true\r",
							"    })\r",
							"\r",
							"// pm.test('Schema is valid', function() {\r",
							"//   pm.response.to.have.jsonSchema(schema);\r",
							"// });\r",
							"\r",
							"pm.test(\"after_6_m_multi_2\", () => {\r",
							"    pm.expect(resJson.qa_salary_after_6_months).to.eql(JSON.parse(req).salary * 2)\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"after_12_m_multi_2.9\", () => {\r",
							"    pm.expect(resJson.qa_salary_after_12_months).to.eql(JSON.parse(req).salary * 2.9)\r",
							"});\r",
							"\r",
							"pm.test(\"after_1.5_y_multi_4\", () => {\r",
							"    pm.expect(resJson.person.u_salary_1_5_year).to.eql(JSON.parse(req).salary * 4)\r",
							"});\r",
							"\r",
							"pm.environment.set(\"u_salary_1.5_year\", resJson.person.u_salary_1_5_year)\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"age\": 13,\r\n    \"salary\": 3000,\r\n    \"name\": \"Sif\",\r\n    \"auth_token\": \"{{token}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info"
					]
				}
			},
			"response": []
		},
		{
			"name": "3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", () => {\r",
							"    pm.expect(pm.response.code).to.eql(200);\r",
							"});\r",
							"\r",
							"let schema = {\r",
							"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
							"    \"$id\": \"http://example.com/example.json\",\r",
							"    \"type\": \"object\",\r",
							"    \"title\": \"The root schema\",\r",
							"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
							"    \"default\": {},\r",
							"    \"examples\": [\r",
							"        {\r",
							"            \"age\": 13,\r",
							"            \"name\": \"sif\",\r",
							"            \"salary\": [\r",
							"                3000,\r",
							"                \"6000\",\r",
							"                \"9000\"\r",
							"            ]\r",
							"        }\r",
							"    ],\r",
							"    \"required\": [\r",
							"        \"age\",\r",
							"        \"name\",\r",
							"        \"salary\"\r",
							"    ],\r",
							"    \"properties\": {\r",
							"        \"age\": {\r",
							"            \"$id\": \"#/properties/age\",\r",
							"            \"type\": \"integer\",\r",
							"            \"title\": \"The age schema\",\r",
							"            \"description\": \"An explanation about the purpose of this instance.\",\r",
							"            \"default\": 0,\r",
							"            \"examples\": [\r",
							"                13\r",
							"            ]\r",
							"        },\r",
							"        \"name\": {\r",
							"            \"$id\": \"#/properties/name\",\r",
							"            \"type\": \"string\",\r",
							"            \"title\": \"The name schema\",\r",
							"            \"description\": \"An explanation about the purpose of this instance.\",\r",
							"            \"default\": \"\",\r",
							"            \"examples\": [\r",
							"                \"sif\"\r",
							"            ]\r",
							"        },\r",
							"        \"salary\": {\r",
							"            \"$id\": \"#/properties/salary\",\r",
							"            \"type\": \"array\",\r",
							"            \"title\": \"The salary schema\",\r",
							"            \"description\": \"An explanation about the purpose of this instance.\",\r",
							"            \"default\": [],\r",
							"            \"examples\": [\r",
							"                [\r",
							"                    3000,\r",
							"                    \"6000\"\r",
							"                ]\r",
							"            ],\r",
							"            \"additionalItems\": true,\r",
							"            \"items\": {\r",
							"                \"$id\": \"#/properties/salary/items\",\r",
							"                \"anyOf\": [\r",
							"                    {\r",
							"                        \"$id\": \"#/properties/salary/items/anyOf/0\",\r",
							"                        \"type\": \"integer\",\r",
							"                        \"title\": \"The first anyOf schema\",\r",
							"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
							"                        \"default\": 0,\r",
							"                        \"examples\": [\r",
							"                            3000\r",
							"                        ]\r",
							"                    },\r",
							"                    {\r",
							"                        \"$id\": \"#/properties/salary/items/anyOf/1\",\r",
							"                        \"type\": \"string\",\r",
							"                        \"title\": \"The second anyOf schema\",\r",
							"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
							"                        \"default\": \"\",\r",
							"                        \"examples\": [\r",
							"                            \"6000\",\r",
							"                            \"9000\"\r",
							"                        ]\r",
							"                    }\r",
							"                ]\r",
							"            }\r",
							"        }\r",
							"    },\r",
							"    \"additionalProperties\": true\r",
							"}\r",
							"\r",
							"let req = request.data;\r",
							"let resJson = pm.response.json();\r",
							"\r",
							"let r =  tv4.validateMultiple(resJson, schema);\r",
							"console.log(r);\r",
							"\r",
							"pm.test('Schema is valid', () => {\r",
							"    pm.expect(tv4.validate(resJson, schema)).to.be.true\r",
							"});\r",
							"\r",
							"pm.test('salary * 2', () => {\r",
							"    pm.expect(parseInt(resJson.salary[1])).to.eql(req.salary * 2)\r",
							"});\r",
							"\r",
							"pm.test('salary * 3', () => {\r",
							"    pm.expect(parseInt(resJson.salary[2])).to.eql(req.salary * 3)\r",
							"});\r",
							"\r",
							"console.log(parseInt(resJson.salary[1]), req.salary * 2);\r",
							"\r",
							"if (resJson.salary[2] > resJson.salary[1])\r",
							"    console.log(true)\r",
							"else console.log(false);\r",
							"\r",
							"if (resJson.salary[2] > resJson.salary[0])\r",
							"    console.log(true)\r",
							"else console.log(false);\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "13",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "3000",
							"type": "text"
						},
						{
							"key": "name",
							"value": "sif",
							"type": "text"
						},
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						}
					],
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://162.55.220.72:5005/new_data",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"new_data"
					]
				}
			},
			"response": []
		},
		{
			"name": "4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", () => {\r",
							"    pm.expect(pm.response.code).to.eql(200);\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"let schema = {\r",
							"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
							"    \"$id\": \"http://example.com/example.json\",\r",
							"    \"type\": \"object\",\r",
							"    \"title\": \"The root schema\",\r",
							"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
							"    \"default\": {},\r",
							"    \"examples\": [\r",
							"        {\r",
							"            \"age\": 13,\r",
							"            \"daily_food\": 0.72,\r",
							"            \"daily_sleep\": 150.0,\r",
							"            \"name\": \"sif\"\r",
							"        }\r",
							"    ],\r",
							"    \"required\": [\r",
							"        \"age\",\r",
							"        \"daily_food\",\r",
							"        \"daily_sleep\",\r",
							"        \"name\"\r",
							"    ],\r",
							"    \"properties\": {\r",
							"        \"age\": {\r",
							"            \"$id\": \"#/properties/age\",\r",
							"            \"type\": \"integer\",\r",
							"            \"title\": \"The age schema\",\r",
							"            \"description\": \"An explanation about the purpose of this instance.\",\r",
							"            \"default\": 0,\r",
							"            \"examples\": [\r",
							"                13\r",
							"            ]\r",
							"        },\r",
							"        \"daily_food\": {\r",
							"            \"$id\": \"#/properties/daily_food\",\r",
							"            \"type\": \"number\",\r",
							"            \"title\": \"The daily_food schema\",\r",
							"            \"description\": \"An explanation about the purpose of this instance.\",\r",
							"            \"default\": 0.0,\r",
							"            \"examples\": [\r",
							"                0.72\r",
							"            ]\r",
							"        },\r",
							"        \"daily_sleep\": {\r",
							"            \"$id\": \"#/properties/daily_sleep\",\r",
							"            \"type\": \"number\",\r",
							"            \"title\": \"The daily_sleep schema\",\r",
							"            \"description\": \"An explanation about the purpose of this instance.\",\r",
							"            \"default\": 0.0,\r",
							"            \"examples\": [\r",
							"                150.0\r",
							"            ]\r",
							"        },\r",
							"        \"name\": {\r",
							"            \"$id\": \"#/properties/name\",\r",
							"            \"type\": \"string\",\r",
							"            \"title\": \"The name schema\",\r",
							"            \"description\": \"An explanation about the purpose of this instance.\",\r",
							"            \"default\": \"\",\r",
							"            \"examples\": [\r",
							"                \"sif\"\r",
							"            ]\r",
							"        }\r",
							"    },\r",
							"    \"additionalProperties\": true\r",
							"}\r",
							"\r",
							"let req = request.data;\r",
							"let resJson = pm.response.json();\r",
							"\r",
							"\r",
							"let r =  tv4.validateMultiple(resJson, schema);\r",
							"console.log(r);\r",
							"\r",
							"pm.test('Schema is valid', () => {\r",
							"    pm.expect(tv4.validate(resJson, schema)).to.be.true\r",
							"});\r",
							"\r",
							"pm.test('weight*12', () => {\r",
							"    pm.expect(resJson.daily_food).to.eql(req.weight * 0.012)\r",
							"});\r",
							"\r",
							"pm.test('weight*2.5', () => {\r",
							"    pm.expect(resJson.daily_sleep).to.eql(req.weight * 2.5)\r",
							"});\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "13",
							"type": "text"
						},
						{
							"key": "weight",
							"value": "60",
							"type": "text"
						},
						{
							"key": "name",
							"value": "sif",
							"type": "text"
						},
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/test_pet_info",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"test_pet_info"
					]
				}
			},
			"response": []
		},
		{
			"name": "5",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let schema = {\r",
							"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
							"    \"$id\": \"http://example.com/example.json\",\r",
							"    \"type\": \"object\",\r",
							"    \"title\": \"The root schema\",\r",
							"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
							"    \"default\": {},\r",
							"    \"examples\": [\r",
							"        {\r",
							"            \"age\": \"13\",\r",
							"            \"family\": {\r",
							"                \"children\": [\r",
							"                    [\r",
							"                        \"Alex\",\r",
							"                        24\r",
							"                    ],\r",
							"                    [\r",
							"                        \"Kate\",\r",
							"                        12\r",
							"                    ]\r",
							"                ],\r",
							"                \"u_salary_1_5_year\": 12000\r",
							"            },\r",
							"            \"name\": \"sif\",\r",
							"            \"salary\": 3000\r",
							"        }\r",
							"    ],\r",
							"    \"required\": [\r",
							"        \"age\",\r",
							"        \"family\",\r",
							"        \"name\",\r",
							"        \"salary\"\r",
							"    ],\r",
							"    \"properties\": {\r",
							"        \"age\": {\r",
							"            \"$id\": \"#/properties/age\",\r",
							"            \"type\": \"string\",\r",
							"            \"title\": \"The age schema\",\r",
							"            \"description\": \"An explanation about the purpose of this instance.\",\r",
							"            \"default\": \"\",\r",
							"            \"examples\": [\r",
							"                \"13\"\r",
							"            ]\r",
							"        },\r",
							"        \"family\": {\r",
							"            \"$id\": \"#/properties/family\",\r",
							"            \"type\": \"object\",\r",
							"            \"title\": \"The family schema\",\r",
							"            \"description\": \"An explanation about the purpose of this instance.\",\r",
							"            \"default\": {},\r",
							"            \"examples\": [\r",
							"                {\r",
							"                    \"children\": [\r",
							"                        [\r",
							"                            \"Alex\",\r",
							"                            24\r",
							"                        ],\r",
							"                        [\r",
							"                            \"Kate\",\r",
							"                            12\r",
							"                        ]\r",
							"                    ],\r",
							"                    \"u_salary_1_5_year\": 12000\r",
							"                }\r",
							"            ],\r",
							"            \"required\": [\r",
							"                \"children\",\r",
							"                \"u_salary_1_5_year\"\r",
							"            ],\r",
							"            \"properties\": {\r",
							"                \"children\": {\r",
							"                    \"$id\": \"#/properties/family/properties/children\",\r",
							"                    \"type\": \"array\",\r",
							"                    \"title\": \"The children schema\",\r",
							"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
							"                    \"default\": [],\r",
							"                    \"examples\": [\r",
							"                        [\r",
							"                            [\r",
							"                                \"Alex\",\r",
							"                                24\r",
							"                            ],\r",
							"                            [\r",
							"                                \"Kate\",\r",
							"                                12\r",
							"                            ]\r",
							"                        ]\r",
							"                    ],\r",
							"                    \"additionalItems\": true,\r",
							"                    \"items\": {\r",
							"                        \"$id\": \"#/properties/family/properties/children/items\",\r",
							"                        \"anyOf\": [\r",
							"                            {\r",
							"                                \"$id\": \"#/properties/family/properties/children/items/anyOf/0\",\r",
							"                                \"type\": \"array\",\r",
							"                                \"title\": \"The first anyOf schema\",\r",
							"                                \"description\": \"An explanation about the purpose of this instance.\",\r",
							"                                \"default\": [],\r",
							"                                \"examples\": [\r",
							"                                    [\r",
							"                                        \"Alex\",\r",
							"                                        24\r",
							"                                    ]\r",
							"                                ],\r",
							"                                \"additionalItems\": true,\r",
							"                                \"items\": {\r",
							"                                    \"$id\": \"#/properties/family/properties/children/items/anyOf/0/items\",\r",
							"                                    \"anyOf\": [\r",
							"                                        {\r",
							"                                            \"$id\": \"#/properties/family/properties/children/items/anyOf/0/items/anyOf/0\",\r",
							"                                            \"type\": \"string\",\r",
							"                                            \"title\": \"The first anyOf schema\",\r",
							"                                            \"description\": \"An explanation about the purpose of this instance.\",\r",
							"                                            \"default\": \"\",\r",
							"                                            \"examples\": [\r",
							"                                                \"Alex\"\r",
							"                                            ]\r",
							"                                        },\r",
							"                                        {\r",
							"                                            \"$id\": \"#/properties/family/properties/children/items/anyOf/0/items/anyOf/1\",\r",
							"                                            \"type\": \"integer\",\r",
							"                                            \"title\": \"The second anyOf schema\",\r",
							"                                            \"description\": \"An explanation about the purpose of this instance.\",\r",
							"                                            \"default\": 0,\r",
							"                                            \"examples\": [\r",
							"                                                24\r",
							"                                            ]\r",
							"                                        }\r",
							"                                    ]\r",
							"                                }\r",
							"                            },\r",
							"                            {\r",
							"                                \"$id\": \"#/properties/family/properties/children/items/anyOf/1\",\r",
							"                                \"type\": \"array\",\r",
							"                                \"title\": \"The second anyOf schema\",\r",
							"                                \"description\": \"An explanation about the purpose of this instance.\",\r",
							"                                \"default\": [],\r",
							"                                \"examples\": [\r",
							"                                    [\r",
							"                                        \"Kate\",\r",
							"                                        12\r",
							"                                    ]\r",
							"                                ],\r",
							"                                \"additionalItems\": true,\r",
							"                                \"items\": {\r",
							"                                    \"$id\": \"#/properties/family/properties/children/items/anyOf/1/items\",\r",
							"                                    \"anyOf\": [\r",
							"                                        {\r",
							"                                            \"$id\": \"#/properties/family/properties/children/items/anyOf/1/items/anyOf/0\",\r",
							"                                            \"type\": \"string\",\r",
							"                                            \"title\": \"The first anyOf schema\",\r",
							"                                            \"description\": \"An explanation about the purpose of this instance.\",\r",
							"                                            \"default\": \"\",\r",
							"                                            \"examples\": [\r",
							"                                                \"Kate\"\r",
							"                                            ]\r",
							"                                        },\r",
							"                                        {\r",
							"                                            \"$id\": \"#/properties/family/properties/children/items/anyOf/1/items/anyOf/1\",\r",
							"                                            \"type\": \"integer\",\r",
							"                                            \"title\": \"The second anyOf schema\",\r",
							"                                            \"description\": \"An explanation about the purpose of this instance.\",\r",
							"                                            \"default\": 0,\r",
							"                                            \"examples\": [\r",
							"                                                12\r",
							"                                            ]\r",
							"                                        }\r",
							"                                    ]\r",
							"                                }\r",
							"                            }\r",
							"                        ]\r",
							"                    }\r",
							"                },\r",
							"                \"u_salary_1_5_year\": {\r",
							"                    \"$id\": \"#/properties/family/properties/u_salary_1_5_year\",\r",
							"                    \"type\": \"integer\",\r",
							"                    \"title\": \"The u_salary_1_5_year schema\",\r",
							"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
							"                    \"default\": 0,\r",
							"                    \"examples\": [\r",
							"                        12000\r",
							"                    ]\r",
							"                }\r",
							"            },\r",
							"            \"additionalProperties\": true\r",
							"        },\r",
							"        \"name\": {\r",
							"            \"$id\": \"#/properties/name\",\r",
							"            \"type\": \"string\",\r",
							"            \"title\": \"The name schema\",\r",
							"            \"description\": \"An explanation about the purpose of this instance.\",\r",
							"            \"default\": \"\",\r",
							"            \"examples\": [\r",
							"                \"sif\"\r",
							"            ]\r",
							"        },\r",
							"        \"salary\": {\r",
							"            \"$id\": \"#/properties/salary\",\r",
							"            \"type\": \"integer\",\r",
							"            \"title\": \"The salary schema\",\r",
							"            \"description\": \"An explanation about the purpose of this instance.\",\r",
							"            \"default\": 0,\r",
							"            \"examples\": [\r",
							"                3000\r",
							"            ]\r",
							"        }\r",
							"    },\r",
							"    \"additionalProperties\": true\r",
							"}\r",
							"\r",
							"\r",
							"pm.test(\"Status code is 200\", () => {\r",
							"    pm.expect(pm.response.code).to.eql(200);\r",
							"});\r",
							"\r",
							"\r",
							"let req = request.data;\r",
							"let resJson = pm.response.json();\r",
							"\r",
							"\r",
							"let r =  tv4.validateMultiple(resJson, schema);\r",
							"console.log(r);\r",
							"\r",
							"pm.test('Schema is valid', () => {\r",
							"    pm.expect(tv4.validate(resJson, schema)).to.be.true\r",
							"});\r",
							"\r",
							"pm.test('nameEQLnameEnv', () => {\r",
							"    let n = pm.environment.get('name');\r",
							"    console.log(n);\r",
							"    pm.expect(resJson.name).to.eql(n);\r",
							"});\r",
							"\r",
							"pm.test('respAgeEQL', () => {\r",
							"    pm.expect(resJson.age).to.eql(req.age)\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "13",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "{{u_salary_1.5_year}}",
							"type": "text"
						},
						{
							"key": "name",
							"value": "sif",
							"type": "text"
						},
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/get_test_user",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"get_test_user"
					],
					"query": [
						{
							"key": "",
							"value": "",
							"disabled": true
						},
						{
							"key": "",
							"value": "",
							"disabled": true
						},
						{
							"key": "",
							"value": "",
							"disabled": true
						},
						{
							"key": "",
							"value": "",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "6",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let resJson = pm.response.json();\r",
							"let dlina = resJson.length;\r",
							"console.log(dlina);\r",
							"function getRandomInt(min, max) {\r",
							"  min = Math.ceil(min);\r",
							"  max = Math.floor(max);\r",
							"  return Math.floor(Math.random() * (max - min)) + min; //Максимум не включается, минимум включается\r",
							"}\r",
							"// console.log(resJson[getRandomInt(0,304)].Cur_ID);\r",
							"\r",
							"pm.environment.set('ID', resJson[getRandomInt(0,304)].Cur_ID)\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/currency",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"currency"
					],
					"query": [
						{
							"key": "",
							"value": "",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "7",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", () => {\r",
							"    pm.expect(pm.response.code).to.eql(200);\r",
							"});\r",
							"\r",
							"let schema = {\r",
							"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
							"    \"$id\": \"http://example.com/example.json\",\r",
							"    \"type\": \"object\",\r",
							"    \"title\": \"The root schema\",\r",
							"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
							"    \"default\": {},\r",
							"    \"examples\": [\r",
							"        {\r",
							"            \"Cur_Abbreviation\": \"DKK\",\r",
							"            \"Cur_ID\": 450,\r",
							"            \"Cur_Name\": \"Датских крон\",\r",
							"            \"Cur_OfficialRate\": 3.937,\r",
							"            \"Cur_Scale\": 10,\r",
							"            \"Date\": \"2022-02-04T00:00:00\"\r",
							"        }\r",
							"    ],\r",
							"    \"required\": [\r",
							"        \"Cur_Abbreviation\",\r",
							"        \"Cur_ID\",\r",
							"        \"Cur_Name\",\r",
							"        \"Cur_OfficialRate\",\r",
							"        \"Cur_Scale\",\r",
							"        \"Date\"\r",
							"    ],\r",
							"    \"properties\": {\r",
							"        \"Cur_Abbreviation\": {\r",
							"            \"$id\": \"#/properties/Cur_Abbreviation\",\r",
							"            \"type\": \"string\",\r",
							"            \"title\": \"The Cur_Abbreviation schema\",\r",
							"            \"description\": \"An explanation about the purpose of this instance.\",\r",
							"            \"default\": \"\",\r",
							"            \"examples\": [\r",
							"                \"DKK\"\r",
							"            ]\r",
							"        },\r",
							"        \"Cur_ID\": {\r",
							"            \"$id\": \"#/properties/Cur_ID\",\r",
							"            \"type\": \"integer\",\r",
							"            \"title\": \"The Cur_ID schema\",\r",
							"            \"description\": \"An explanation about the purpose of this instance.\",\r",
							"            \"default\": 0,\r",
							"            \"examples\": [\r",
							"                450\r",
							"            ]\r",
							"        },\r",
							"        \"Cur_Name\": {\r",
							"            \"$id\": \"#/properties/Cur_Name\",\r",
							"            \"type\": \"string\",\r",
							"            \"title\": \"The Cur_Name schema\",\r",
							"            \"description\": \"An explanation about the purpose of this instance.\",\r",
							"            \"default\": \"\",\r",
							"            \"examples\": [\r",
							"                \"Датских крон\"\r",
							"            ]\r",
							"        },\r",
							"        \"Cur_OfficialRate\": {\r",
							"            \"$id\": \"#/properties/Cur_OfficialRate\",\r",
							"            \"type\": \"number\",\r",
							"            \"title\": \"The Cur_OfficialRate schema\",\r",
							"            \"description\": \"An explanation about the purpose of this instance.\",\r",
							"            \"default\": 0.0,\r",
							"            \"examples\": [\r",
							"                3.937\r",
							"            ]\r",
							"        },\r",
							"        \"Cur_Scale\": {\r",
							"            \"$id\": \"#/properties/Cur_Scale\",\r",
							"            \"type\": \"integer\",\r",
							"            \"title\": \"The Cur_Scale schema\",\r",
							"            \"description\": \"An explanation about the purpose of this instance.\",\r",
							"            \"default\": 0,\r",
							"            \"examples\": [\r",
							"                10\r",
							"            ]\r",
							"        },\r",
							"        \"Date\": {\r",
							"            \"$id\": \"#/properties/Date\",\r",
							"            \"type\": \"string\",\r",
							"            \"title\": \"The Date schema\",\r",
							"            \"description\": \"An explanation about the purpose of this instance.\",\r",
							"            \"default\": \"\",\r",
							"            \"examples\": [\r",
							"                \"2022-02-04T00:00:00\"\r",
							"            ]\r",
							"        }\r",
							"    },\r",
							"    \"additionalProperties\": true\r",
							"}\r",
							"\r",
							"let resJson = pm.response.json();\r",
							"\r",
							"let r =  tv4.validateMultiple(resJson, schema);\r",
							"console.log(r);\r",
							"\r",
							"pm.test('Schema is valid', () => {\r",
							"    pm.expect(tv4.validate(resJson, schema)).to.be.true\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						},
						{
							"key": "curr_code",
							"value": "{{ID}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/curr_byn",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"curr_byn"
					]
				}
			},
			"response": []
		}
	]
}
